:root {
	--textColor: rgba(0, 0, 0, 1);
	--backgroundColor: rgba(255, 255, 255, 1);
	--accentColor: rgba(96, 0, 128, 1);
	--accentColorTransparent: rgba(96, 0, 128, 0.25);
	--shadowColor: rgba(0, 0, 0, 0.5);
	--mainFont: 'Poppins', sans-serif;
	--fontSizeLargest: min(7vw, 48px);
	--fontSizeLarger: min(5vw, 32px);
	--fontSizeNormal: min(2.5vw, 16px);
	--fontSizeSmaller: min(1, 12px);
	--fontSizeSmallest: min(0.75, 8px);
}

body,
html {
	font-family: var(--mainFont);
	color: var(--textColor);
	margin: 0;
	padding: 0;
}

body {
	width: 100vw;
	height: 100vh;
	margin: 0 auto;
}

.noScroll {
	overflow: hidden;
}

.noPadding {
	margin: 0 !important;
	padding: 0 !important;
}

.card {
	border-radius: 25px;
	box-shadow: 0 2px 5px 0 var(--shadowColor);
	padding: 1rem;
	box-sizing: border-box;
}

main {
    max-width: 100%;
	width: 100vw;
	height: 100vh;
}

.centerItems {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	text-align: center;
}

.mainCard {
	position: relative;
	max-height: 90%;
	max-width: 90%;
	overflow: hidden;
}

.mainCard * {
	padding: 0.25rem;
	margin: 1rem;
}

.mainCard h1 {
	font-size: var(--fontSizeLargest);
}

.mainCard h2 {
	font-size: var(--fontSizeLarger);
}

.mainOptions {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
}

.option {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	text-align: center;
	font-size: var(--fontSizeNormal);
	max-width: 10rem;
	max-height: 10rem;
	cursor: pointer;
	transition: transform 0.3s ease-in-out, background-color 0.3s ease-in-out;
	border: none;
	background-color: var(--backgroundColor);
}

.option:hover,
.option:focus-visible {
	transform: translateY(-0.5rem);
}

.option:nth-child(1) svg path {
	fill: purple;
}

.option:nth-child(1):hover,
.option:nth-child(1):focus-visible {
	outline: 2px solid purple;
	background-color: rgba(128, 0, 128, 0.15);
}

.option:nth-child(2) svg path {
	fill: green;
}

.option:nth-child(2):hover,
.option:nth-child(2):focus-visible {
	outline: 2px solid green;
	background-color: rgba(0, 128, 0, 0.15);
}

.option:nth-child(3) svg path {
	fill: firebrick;
}

.option:nth-child(3):hover,
.option:nth-child(3):focus-visible {
	outline: 2px solid firebrick;
	background-color: rgba(178, 34, 34, 0.15);
}

.option:nth-child(4) svg path {
	fill: goldenrod;
}

.option:nth-child(4):hover,
.option:nth-child(4):focus-visible {
	outline: 2px solid goldenrod;
	background-color: rgba(218, 165, 32, 0.15);
}

.option:hover svg,
.option:focus-visible svg {
	filter: none;
}

.option svg {
	position: relative;
	width: 50%;
	height: 50%;
	margin-top: 0.5rem;
	margin-bottom: 0;
	transition: filter 0.3s ease-in-out;
	filter: brightness(0);
}

.option h3 {
	font-size: var(--fontSizeNormal);
	margin-top: 0;
	margin-bottom: 0.5rem;
	color: var(--textColor);
}

.roundBox {
	border-radius: 25px;
	aspect-ratio: 1;
}

.boxShadow {
	box-shadow: 0 2px 5px 0 var(--shadowColor);
}

dialog {
	width: 10rem;
	aspect-ratio: 1;
	display: flex;
	justify-content: center;
	align-items: center;
}

dialog::backdrop {
	backdrop-filter: blur(5px);
}

dialog p {
    position: absolute;
    font-family: var(--mainFont);
    font-weight: bold;
    color: var(--textColor);
    padding: 0.25rem;
    border-radius: 25px;
    bottom: -1rem;
}

.loadingIcon {
	width: 50%;
	height: 50%;
	border-radius: 100%;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
    animation: spin 2s ease-in-out infinite;
}

.dot {
	position: absolute;
	width: 2rem;
	height: 2rem;
	display: flex;
	justify-content: center;
	align-items: center;
}

.dot svg {
	position: relative;
	width: 100%;
	height: 100%;
}

.dot:nth-child(1) {
    transform: rotate(270deg) translateX(2.5rem) rotate(-270deg);
}

.dot:nth-child(2) {
    transform: rotate(315deg) translateX(2.5rem) rotate(90deg);
}

.dot:nth-child(3) {
    transform: translateX(2.5rem) rotate(90deg);
}

.dot:nth-child(4) {
    transform: rotate(45deg) translateX(2.5rem) rotate(90deg);
}

.dot:nth-child(5) {
    transform: rotate(90deg) translateX(2.5rem) rotate(-270deg);
}

.dot:nth-child(6) {
    transform: rotate(135deg) translateX(2.5rem) rotate(-270deg);
}

.dot:nth-child(7) {
	transform: rotate(180deg) translateX(2.5rem) rotate(90deg);
}

.dot:nth-child(8) {
	transform: rotate(225deg) translateX(2.5rem) rotate(-270deg);
}

.question {
    width: fit-content;
	display: grid;
	max-width: 90%;
	place-items: center;
}

.questionTitle {
	font-weight: bold;
	font-size: var(--fontSizeLargest);
}

.questionDesc {
	text-align: center;
	word-wrap: break-word;
}

.questionResponse {
	position: relative;
	display: grid;
	grid-auto-flow: column;
	grid-auto-columns: 1fr;
	padding-bottom: 4rem;
}

.questionResponse .qOption {
	border: 2px solid var(--shadowColor);
	position: relative;
	border-radius: 25px;
	padding: 1rem;
	cursor: pointer;
}

.qOption:hover, .qOption:focus-visible {
	outline: none;
	background-color: var(--accentColorTransparent);
}

.questionResponse input {
	display: none;
}

.questionResponse input[type="radio"]:checked + label {
	background-color: var(--accentColor);
	color: var(--backgroundColor);
}

.questionControls {
	box-sizing: border-box;
	position: absolute;
    bottom: 0%;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0;
    margin: 0;
}

.questionControls button {
	display: flex;
	align-items: center;	
	justify-content: center;
	flex: 0% 1 0%;
	aspect-ratio: 1;
	border-radius: 25%;
	padding: 1rem;
	background-color: transparent;
	cursor: pointer;
	border: 2px solid transparent;
	box-sizing: border-box;
}

.questionControls #previousButton:hover, .questionControls #previousButton:focus-visible {
	outline: none;
	border: 2px solid var(--shadowColor);
	background-color: rgba(255, 0, 0, 0.5);
}

.questionControls #nextButton:hover, .questionControls #nextButton:focus-visible {
	outline: none;
	border: 2px solid var(--shadowColor);
	background-color: rgba(0, 255, 0, 0.5);
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}
